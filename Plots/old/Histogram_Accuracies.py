import numpy as np
import matplotlib.pyplot as plt
import matplotlib.gridspec as gridspec
import matplotlib
from pylab import *
from matplotlib import colors
import matplotlib.patches as patches
import seaborn as sns
import pickle
import time
import copy
import operator



#1. Definir colores
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::
cmaptest=matplotlib.cm.get_cmap("BrBG") #Selecciona el heatmap que quieres trocear                           
color1=cmaptest(0.95);color2=cmaptest(0.05)
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::

#1. CHOOSE DATASET TO PLOT HISTOGRAM
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Datasets=['ToyDataset','Large_Categories','Large_Quartiles']
Dataset=Datasets[1]

if Dataset=='ToyDataset':

    #Data
    #==========================================================================================================
    AccuraciesBestLikelihood=[ 0.602038103677, 0.643287549845, 0.656357997342, 0.663103677448, 0.7085733274,\
                           0.7175343376, 0.7353788214, 0.7461896323, 0.752027027, 0.762040319, 0.7659282233,\
                           0.7692179885, 0.7672241914, 0.7706136464, 0.7722308374, 0.7713003988, 0.7733606557,\
                           0.774778467, 0.7740363314, 0.7737151086]

    AccuraciesAverage=[0.6005250332, 0.6387704918, 0.6545547187, 0.6623416039, 0.7056313691, 0.7154452813,\
                   0.7323681879, 0.7471045636, 0.7521178556, 0.7618808152, 0.7665019938, 0.7693464776,\
                   0.7670491803, 0.7699955693, 0.7724634471, 0.7710323438, 0.7731280461, 0.7744926894,\
                   0.7737128932, 0.7744971201]


    Error=[0.0015607924, 0.0020436837, 0.0015536217, 0.0002998767, 0.001030894, 0.0005699106, 0.000890334,\
       0.0005730987, 0.0003873567, 0.0003058961, 0.0002931946, 0.0002100654, 0.0003469556, 0.0002867419,\
       0.0001917573, 0.0002833848, 0.0004927802, 0.0002984618, 0.0002311121, 0.0004160104]
    #==========================================================================================================

    #Parameters for plot
    #================================================================
    ymin=0.58
    ymax=0.80
    yticks=[0.58, 0.6, 0.62, 0.64, 0.66, 0.68, 0.70, 0.72, 0.74, 0.76, 0.78, 0.8]
    
    xticks=['K=3,L=5','K=5,L=5','K=5,L=10','K=10,L=5','K=10,L=10','K=10,L=20',\
            'K=20,L=10','K=20, L=20','K=20, L=40','K=40, L=20','K=40, L=40',\
            'K=40, L=50','K=50, L=40','K=50, L=50','K=60, L=50','K=50, L=60',\
            'K=60, L=60','K=70, L=60','K=60, L=70','K=70, L=70' ]
    #================================================================
    

elif Dataset=='Large_Categories':

    #Data
    #==========================================================================================================
    AccuraciesBestLikelihood=[0.8284457877, 0.833074661, 0.8346403093, 0.8285547024, 0.8339868213,\
                                  0.8396503839, 0.832829603, 0.8389015956,0.8394189403]#, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        
    AccuraciesAverage=[ 0.8281843925, 0.8306948756, 0.8341828677, 0.8280700321, 0.8329711921,\
                            0.8371943582, 0.8330038665, 0.8367641453,0.8381609759]#, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

    Error=[0.0001039871, 0.0009443226, 0.0003082256, 0.0003414349, 0.0003444076, 0.0010010248, 0.0001617415,\
               0.0009491153, 0.0008034602]#, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    xticks=['K=3,L=5','K=5,L=5', 'K=5,L=10', 'K=10,L=5', 'K=10,L=10', 'K=10,L=20', 'K=20,L=10', 'K=20, L=20',\
              'K=20, L=30', 'K=30, L=20', 'K=30, L=30', 'K=30, L=40', 'K=40, L=30', 'K=40, L=40', 'K=40, L=50',\
              'K=50, L=40', 'K=50, L=50']
    #==========================================================================================================

    #Parameters for plot
    #================================================================
    ymin=0.81
    ymax=0.87
    yticks=[0.82, 0.84, 0.86]

    #================================================================
    
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++    

#Xticks positions
#=================
xticks_Position=[]
contador=0
for i in range(len(AccuraciesAverage)):
    xticks_Position.append(contador)
    contador+=0.75
#=================


#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


#2. PLOTS
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#2.1. Plotting Parameters
#==============================================
#2.1.1.Ejes: limites y nombres
#:::::::::::::::::::::::
size_eje=15
size_ticks=9
#:::::::::::::::::::::::

#2.1.2.Xticks positions
#:::::::::::::::::::::::
xticks_Position=[];contador=0
for i in range(len(AccuraciesAverage)):
    xticks_Position.append(contador)
    contador+=0.75
#:::::::::::::::::::::::
#==============================================



#2.2. Gridspec parameters
#=============================
fig=plt.figure(figsize=(17,7))
gs = gridspec.GridSpec(1, 2)
#=============================


#2.3. (0,0) PLOT
#====================================================================
ax0=plt.subplot( gs[0,0] )

plt.errorbar(xticks_Position,AccuraciesBestLikelihood, marker='o',markersize=8, ls='solid')

ax0.set_title('Best Likelihood')
ax0.set_ylabel('Accuracy',fontsize=size_eje)

#xticks and yticks
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
xTickMarks = xticks
ax0.set_xticks([pos for pos in xticks_Position])#Fija la posicion de los xticks
xtickNames = ax0.set_xticklabels(xTickMarks)
plt.setp(xtickNames, rotation=45, fontsize=size_ticks)

yTicksMarks=yticks
ax0.set_yticks(yTicksMarks)
yticknames=ax0.set_yticklabels(yTicksMarks)
plt.yticks(fontsize=size_ticks)
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

#Limite ejes
#::::::::::::::::::::::::::::::::::::::
ax0.set_xlim( xticks_Position[0]-0.5, xticks_Position[-1]+0.5 )
ax0.set_ylim(ymin,ymax)
#::::::::::::::::::::::::::::::::::::::

#====================================================================

#2.4. (0,1) PLOT
#====================================================================
ax1=plt.subplot( gs[0,1] )

plt.errorbar(xticks_Position,AccuraciesAverage, yerr=Error, marker='o',markersize=8, ls='solid')

ax1.set_title('Average Likelihood')

#xticks and yticks
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
ax1.set_xticks([pos for pos in xticks_Position] )#Fija la posicion de los xticks
xtickNames = ax1.set_xticklabels(xTickMarks)
plt.setp(xtickNames, rotation=45, fontsize=size_ticks)

yTicksMarks=yticks
ax1.set_yticks(yTicksMarks)
yticknames=ax1.set_yticklabels(yTicksMarks)
plt.yticks(fontsize=size_ticks)
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

#Limite ejes
#::::::::::::::::::::::::::::::::::::::
ax1.set_xlim( xticks_Position[0]-0.5, xticks_Position[-1]+0.5 )
ax1.set_ylim(ymin,ymax)
#::::::::::::::::::::::::::::::::::::::

#====================================================================

#2.5. Save and show
#================================================
#plt.savefig('../../Plots/FirstAccuracies.png')
plt.show()
#================================================

#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

